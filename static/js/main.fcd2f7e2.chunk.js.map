{"version":3,"sources":["constants.js","like-icon.png","reference.png","App.js","reportWebVitals.js","index.js"],"names":["PROMPTS","App","useState","showLike","setShowLike","chosenPrompt","setChosenPrompt","customPrompt","setCustomPrompt","response","setResponse","width","setWidth","promptThicc","setPromptThicc","responseThicc","setResponseThicc","prompt","length","className","onChange","e","target","value","defaultValue","selected","id","disabled","sort","map","p","trim","onClick","xmlns","fill","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","parseInt","min","max","step","checked","style","fontWeight","height","src","like","alt","reference","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcd2f7e2.chunk.js","sourcesContent":["export const PROMPTS = [\n    \"I know the best spot in town for \",\n    \"A shower thought I recently had \",\n    \"A life goal of mine \",\n    \"A random fact I love is \",\n    \"A social cause I care about \",\n    \"All I ask is that you \",\n    \"An overshare  \",\n    \"Believe it or not, I  \",\n    \"Best travel story  \",\n    \"Biggest risk I’ve taken  \",\n    \"Change my mind about  \",\n    \"Dating me is like  \",\n    \"Do you agree or disagree that  \",\n    \"Don’t hate me if I  \",\n    \"Fact about me that surprises people  \",\n    \"First round is on me if  \",\n    \"Give me travel tips for  \",\n    \"I bet you can’t  \",\n    \"I geek out on  \",\n    \"I get along best with people who  \",\n    \"I go crazy for  \",\n    \"I recently discovered that  \",\n    \"I take pride in  \",\n    \"I want someone who  \",\n    \"I won’t shut up about  \",\n    \"I’ll brag about you to my friends if  \",\n    \"I’m convinced that  \",\n    \"I’m overly competitive about  \",\n    \"I’m weirdly attracted to  \",\n    \"If loving this is wrong, I don’t want to be right\",\n    \"I’ll fall for you if  \",\n    \"I’ll introduce you to my family if  \",\n    \"I’ll know I’ve found the one when  \",\n    \"I’ll know it’s time to delete Hinge when\",\n    \"I’ll pick the topic if you start the conversation\",\n    \"I’m a regular at  \",\n    \"I’m looking for  \",\n    \"I’m the type of texter who  \",\n    \"Let’s debate this topic  \",\n    \"Let’s make sure we’re on the same page about\",\n    \"Most spontaneous thing I’ve done  \",\n    \"My love language is  \",\n    \"My biggest date fail  \",\n    \"My greatest strength \",\n    \"My ideal date from home \",\n    \"My mantra is  \",\n    \"My most controversial opinion is  \",\n    \"My most irrational fear  \",\n    \"My simple pleasures  \",\n    \"Never have I ever  \",\n    \"One thing I’ll never do again  \",\n    \"Something that’s non-negotiable for me is  \",\n    \"Teach me something about  \",\n    \"The award I should be nominated for  \",\n    \"The best way to ask me out is by  \",\n    \"The dorkiest thing about me is  \",\n    \"The hallmark of a good relationship is  \",\n    \"The key to my heart is  \",\n    \"The one thing I’d love to know about you is  \",\n    \"The one thing you should know about me is  \",\n    \"The secret to getting to know me is  \",\n    \"The way to win me over is  \",\n    \"This year, I really want to  \",\n    \"Together, we could  \",\n    \"Try to guess this about me  \",\n    \"Two truths and a lie  \",\n    \"Typical Sunday  \",\n    \"Unusual skills  \",\n    \"We’ll get along if  \",\n    \"Weirdest gift I’ve given or received  \",\n    \"We’re the same type of weird if  \",\n    \"What I order for the table  \",\n    \"What if I told you that  \",\n    \"Which is more important to you  \",\n    \"Worst idea I’ve ever had  \",\n    \"You should *not* go out with me if  \",\n    \"You should leave a comment if  \",\n    \"You’ll know I like you if  \",\n]\n","export default __webpack_public_path__ + \"static/media/like-icon.3d6e2654.png\";","export default __webpack_public_path__ + \"static/media/reference.2f85f10f.png\";","import \"./App.css\";\nimport { PROMPTS } from \"./constants\";\nimport { useState } from \"react\";\nimport like from \"./like-icon.png\";\nimport reference from \"./reference.png\";\n\nfunction App() {\n  const [showLike, setShowLike] = useState(true);\n  const [chosenPrompt, setChosenPrompt] = useState(\"\");\n  const [customPrompt, setCustomPrompt] = useState(\"Worst idea I've ever had\");\n  const [response, setResponse] = useState(\n    \"Opening a bottle of wine with a drill. 🤦🏽‍♀️\"\n  );\n  const [width, setWidth] = useState(464);\n  const [promptThicc, setPromptThicc] = useState(500);\n  const [responseThicc, setResponseThicc] = useState(600);\n\n  const prompt = customPrompt.length > 0 ? customPrompt : chosenPrompt;\n\n  return (\n    <div className=\"App\">\n      <div className=\"container mx-auto max-w-3xl\">\n        <div className=\"py-10\">\n          <div className=\"relative text-2xl mb-4 \">\n            Hinge prompt screenshot generator\n            <div\n              data-tip=\"the fonts aren't the same since the Hinge app uses licensed fonts, so the closest free versions I could find are here\"\n              className=\"z-10 absolute right-0 top-0 tooltip tooltip-left\"\n            >\n              <button className=\"btn btn-sm btn-outline\">?</button>\n            </div>\n          </div>\n          <div className=\"relative z-0 p-10 card bg-base-200\">\n            <div className=\"form-control\">\n              <label className=\"label\">\n                <span className=\"label-text\">\n                  Choose one of Hinge's prompts:\n                </span>\n              </label>\n              <select\n                onChange={(e) => {\n                  setCustomPrompt(\"\");\n                  setChosenPrompt(e.target.value);\n                }}\n                defaultValue=\"first\"\n                className=\"font-semibold select select-bordered select-sm w-full max-w-xs\"\n              >\n                <option selected id=\"first\" disabled=\"disabled\">\n                  Choose prompt\n                </option>\n                {PROMPTS.sort().map((p) => (\n                  <option key={p}>{p.trim()}</option>\n                ))}\n              </select>\n              <div className=\"h-4\"></div>\n\n              <div className=\"flex flex-row\">\n                <label className=\"label\">\n                  <span className=\"font-semibold label-text\">\n                    <span>Or write custom prompt:</span>\n                  </span>\n                </label>\n                <button\n                  onClick={(e) => setCustomPrompt(\"\")}\n                  className=\"opacity-50 btn btn-outline btn-xs my-2 mx-1\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    className=\"inline-block w-4 h-4 mr-1 stroke-current\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    ></path>\n                  </svg>\n                  Clear\n                </button>\n              </div>\n              <input\n                type=\"text\"\n                onChange={(e) => setCustomPrompt(e.target.value)}\n                value={customPrompt}\n                placeholder=\"prompt\"\n                className=\"input input-primary input-bordered\"\n              />\n\n              <div className=\"h-4\"></div>\n              <div className=\"flex flex-row\">\n                <label className=\"label\">\n                  <span className=\"label-text\">\n                    <span className=\"font-semibold mr-2\">Response</span>\n                  </span>\n                </label>\n                <button\n                  onClick={(e) => setResponse(\"\")}\n                  className=\"opacity-50 btn btn-outline btn-xs my-2 mx-1\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    className=\"inline-block w-4 h-4 mr-1 stroke-current\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    ></path>\n                  </svg>\n                  Clear\n                </button>\n              </div>\n              <input\n                onChange={(e) => setResponse(e.target.value)}\n                value={response}\n                type=\"text\"\n                placeholder=\"response\"\n                className=\"input input-accent input-bordered\"\n              />\n\n              <div className=\"h-4\"></div>\n              <label className=\"label\">\n                <span className=\"label-text\">Width: {width}</span>\n\n              </label>\n              <input\n                onChange={(e) => setWidth(parseInt(e.target.value))}\n                type=\"range\"\n                min=\"300\"\n                max=\"1000\"\n                step=\"10\"\n                value={width}\n                className=\"range range-sm\"\n              />\n\n              <div className=\"h-4\"></div>\n              <label className=\"label\">\n                <span className=\"label-text\">Prompt font thickness: {promptThicc}</span>\n                <div\n                  data-tip=\"Windows and Mac seem to render the font thickness differently (thinner on Windows) so here you go!\"\n                  className=\"tooltip tooltip-left\">\n                  <button className=\"btn btn-sm btn-outline\">?</button>\n                </div>\n              </label>\n              <input\n                onChange={(e) => setPromptThicc(parseInt(e.target.value))}\n                type=\"range\"\n                min=\"300\"\n                max=\"900\"\n                step=\"100\"\n                value={promptThicc}\n                className=\"range range-sm\"\n              />\n\n              <div className=\"h-4\"></div>\n              <label className=\"label\">\n                <span className=\"label-text\">Response font thickness: {responseThicc}</span>\n              </label>\n              <input\n                onChange={(e) => setResponseThicc(parseInt(e.target.value))}\n                type=\"range\"\n                min=\"400\"\n                max=\"900\"\n                step=\"100\"\n                value={responseThicc}\n                className=\"range range-sm\"\n              />\n\n              <div className=\"h-4\"></div>\n              <div className=\"flex flex-row items-center\">\n                <label className=\"label mr-1\">\n                  <span className=\"label-text\">Show like button</span>\n                </label>\n                <input\n                  checked={showLike}\n                  onChange={() => setShowLike(!showLike)}\n                  type=\"checkbox\"\n                  className=\"toggle toggle-sm\"\n                />\n              </div>\n\n              <div className=\"h-4\"></div>\n              <label className=\"label\">\n                <span className=\"label-text\">\n                  <div className=\"italic\">\n                    To screenshot: <kbd>Windows</kbd>+<kbd>Shift</kbd>+\n                    <kbd>S</kbd> or<kbd>Command</kbd>+<kbd>Ctrl</kbd>+\n                    <kbd>Shift</kbd>+<kbd>4</kbd>\n                  </div>\n                </span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-10\">\n          <div\n            style={{ width: width }}\n            className=\"mx-10 bg-white card pb-3 hinge-shadow\"\n          >\n            <div className=\"pt-20 pb-16 px-8 card-body\">\n              <div style={{ fontWeight: promptThicc }} className=\"mb-4 text-base text-black hinge-prompt\">\n                {prompt}\n              </div>\n              <div style={{ fontWeight: responseThicc }} className=\"text-3xl text-black hinge-answer\">{response}</div>\n            </div>\n            {showLike && (\n              <img\n                style={{ height: \"70px\" }}\n                className=\"absolute bottom-3 right-3\"\n                src={like}\n                alt=\"send like icon\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"pb-24\">\n          <div className=\"p-4 border-2 border-gray-400\">\n            <p>Actual screenshot for comparison</p>\n            <img\n              style={{ height: \"310px\" }}\n              src={reference}\n              alt=\"reference hinge prompt screenshot\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}